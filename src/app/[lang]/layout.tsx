/* eslint-disable @typescript-eslint/no-unsafe-assignment */
import "~/styles/globals.css";

import { GeistSans } from "geist/font/sans";
import { TRPCReactProvider } from "~/trpc/react";
import Footer from "./_components/Footer/footer";
import type { Metadata } from "next/types";
import Providers from "./providers";
import Header from "./_components/Header/header";
import { getDictionary } from "./disctionaries";
import type { LangType } from "~/types/constTypes";

export const metadata: Metadata = {
  title: "T3 Auth",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export async function generateStaticParams() {
  return [{ locale: "en" }, { locale: "ge" }]
}

export default async function RootLayout({
  children,
  params
}: Readonly<{ children: React.ReactNode, params: { lang: string } }>) {
  const { lang } = params;
  const dict: LangType = await getDictionary(lang)
  return (
    <html lang={lang} className={`${GeistSans.variable}`}>
      <body>  
        <Providers>
          <TRPCReactProvider>
            <Header dict={dict} lang={lang} />
            {children}
            <Footer />
          </TRPCReactProvider>
        </Providers>
      </body>
    </html>
  );
}
